{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{Chart,DoughnutController,ArcElement,Tooltip,Legend}from'chart.js';import{jsx as _jsx}from\"react/jsx-runtime\";Chart.register(DoughnutController,ArcElement,Tooltip,Legend);const AnalysisChart=_ref=>{let{demoPerc}=_ref;const canvasRef=useRef(null);const chartInstanceRef=useRef(null);useEffect(()=>{const ctx=canvasRef.current.getContext('2d');const centerTextPlugin={id:'centerText',beforeDraw:chart=>{const{width,height,ctx}=chart;ctx.save();const mainFontSize=height/8;const superscriptFontSize=height/16;const numberText=`${Math.round(demoPerc)}`;const percentText=`%`;ctx.font=`${mainFontSize}px 'Roobert Trial`;ctx.textBaseline='middle';ctx.fillStyle='#1a1b1c';const numberWidth=ctx.measureText(numberText).width;// Position the number in the center\nconst textX=(width-(numberWidth+10))/2;// +10 to account for superscript\nconst textY=height/2;// Draw the main number\nctx.fillText(numberText,textX,textY);// Set font for the superscript\nctx.font=`${superscriptFontSize}px 'Roobert Trial`;// Position the % just to the right and slightly above the number\nconst percentX=textX+numberWidth+2;const percentY=textY-mainFontSize*0.4;// adjust this to move it higher\nctx.fillText(percentText,percentX,percentY);ctx.restore();}};let data={datasets:[{data:[demoPerc,100-demoPerc],backgroundColor:['#1a1b1c','#c1c2c3'],hoverBackgroundColor:['#1a1b1c','#c1c2c3'],borderColor:'#00000000'}],labels:['White','Other']};if(chartInstanceRef.current){chartInstanceRef.current.destroy();}chartInstanceRef.current=new Chart(ctx,{type:'doughnut',data:data,options:{responsive:true,maintainAspectRatio:true,cutout:'97%',plugins:{tooltip:{enabled:false},legend:{display:false}}},plugins:[centerTextPlugin]});return()=>{if(chartInstanceRef.current){chartInstanceRef.current.destroy();}};},[demoPerc]);return/*#__PURE__*/_jsx(\"div\",{className:\"analysis__chart\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:\"400\",height:\"400\"})});};export default AnalysisChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","DoughnutController","ArcElement","Tooltip","Legend","jsx","_jsx","register","AnalysisChart","_ref","demoPerc","canvasRef","chartInstanceRef","ctx","current","getContext","centerTextPlugin","id","beforeDraw","chart","width","height","save","mainFontSize","superscriptFontSize","numberText","Math","round","percentText","font","textBaseline","fillStyle","numberWidth","measureText","textX","textY","fillText","percentX","percentY","restore","data","datasets","backgroundColor","hoverBackgroundColor","borderColor","labels","destroy","type","options","responsive","maintainAspectRatio","cutout","plugins","tooltip","enabled","legend","display","className","children","ref"],"sources":["C:/Users/Code/Desktop/Code/skinstric-ai/client/src/components/ui/AnalysisChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport {\r\n    Chart,\r\n    DoughnutController,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js'\r\n\r\nChart.register(DoughnutController, ArcElement, Tooltip, Legend)\r\n\r\nconst AnalysisChart = ({ demoPerc }) => {\r\n    const canvasRef = useRef(null)\r\n    const chartInstanceRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const ctx = canvasRef.current.getContext('2d')\r\n\r\n        const centerTextPlugin = {\r\n            id: 'centerText',\r\n            beforeDraw: (chart) => {\r\n                const { width, height, ctx } = chart\r\n\r\n                ctx.save()\r\n\r\n                const mainFontSize = height / 8\r\n                const superscriptFontSize = height / 16\r\n\r\n                const numberText = `${Math.round(demoPerc)}`\r\n                const percentText = `%`\r\n\r\n                ctx.font = `${mainFontSize}px 'Roobert Trial`\r\n                ctx.textBaseline = 'middle'\r\n                ctx.fillStyle = '#1a1b1c'\r\n\r\n                const numberWidth = ctx.measureText(numberText).width\r\n\r\n                // Position the number in the center\r\n                const textX = (width - (numberWidth + 10)) / 2  // +10 to account for superscript\r\n                const textY = height / 2\r\n\r\n                // Draw the main number\r\n                ctx.fillText(numberText, textX, textY)\r\n\r\n                // Set font for the superscript\r\n                ctx.font = `${superscriptFontSize}px 'Roobert Trial`\r\n\r\n                // Position the % just to the right and slightly above the number\r\n                const percentX = textX + numberWidth + 2\r\n                const percentY = textY - mainFontSize * 0.4  // adjust this to move it higher\r\n\r\n                ctx.fillText(percentText, percentX, percentY)\r\n\r\n                ctx.restore()\r\n            },\r\n        }\r\n\r\n\r\n        let data = {\r\n            datasets: [\r\n                {\r\n                    data: [demoPerc, 100 - demoPerc],\r\n                    backgroundColor: ['#1a1b1c', '#c1c2c3'],\r\n                    hoverBackgroundColor: ['#1a1b1c', '#c1c2c3'],\r\n                    borderColor: '#00000000'\r\n                },\r\n            ],\r\n            labels: ['White', 'Other'],\r\n        }\r\n\r\n        if (chartInstanceRef.current) {\r\n            chartInstanceRef.current.destroy()\r\n        }\r\n\r\n        chartInstanceRef.current = new Chart(ctx, {\r\n            type: 'doughnut',\r\n            data: data,\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n                cutout: '97%',\r\n                plugins: {\r\n                    tooltip: {\r\n                        enabled: false\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }\r\n            },\r\n            plugins: [centerTextPlugin],\r\n        })\r\n\r\n        return () => {\r\n            if (chartInstanceRef.current) {\r\n                chartInstanceRef.current.destroy()\r\n            }\r\n        }\r\n    }, [demoPerc])\r\n\r\n\r\n    return (\r\n        <div className=\"analysis__chart\">\r\n            <canvas\r\n                ref={canvasRef}\r\n                width=\"400\"\r\n                height=\"400\"\r\n            ></canvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnalysisChart \r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,OACIC,KAAK,CACLC,kBAAkB,CAClBC,UAAU,CACVC,OAAO,CACPC,MAAM,KACH,UAAU,QAAAC,GAAA,IAAAC,IAAA,yBAEjBN,KAAK,CAACO,QAAQ,CAACN,kBAAkB,CAAEC,UAAU,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAE/D,KAAM,CAAAI,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAAAE,SAAS,CAAGZ,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAa,gBAAgB,CAAGb,MAAM,CAAC,IAAI,CAAC,CAErCD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAe,GAAG,CAAGF,SAAS,CAACG,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC,CAE9C,KAAM,CAAAC,gBAAgB,CAAG,CACrBC,EAAE,CAAE,YAAY,CAChBC,UAAU,CAAGC,KAAK,EAAK,CACnB,KAAM,CAAEC,KAAK,CAAEC,MAAM,CAAER,GAAI,CAAC,CAAGM,KAAK,CAEpCN,GAAG,CAACS,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAC,YAAY,CAAGF,MAAM,CAAG,CAAC,CAC/B,KAAM,CAAAG,mBAAmB,CAAGH,MAAM,CAAG,EAAE,CAEvC,KAAM,CAAAI,UAAU,CAAG,GAAGC,IAAI,CAACC,KAAK,CAACjB,QAAQ,CAAC,EAAE,CAC5C,KAAM,CAAAkB,WAAW,CAAG,GAAG,CAEvBf,GAAG,CAACgB,IAAI,CAAG,GAAGN,YAAY,mBAAmB,CAC7CV,GAAG,CAACiB,YAAY,CAAG,QAAQ,CAC3BjB,GAAG,CAACkB,SAAS,CAAG,SAAS,CAEzB,KAAM,CAAAC,WAAW,CAAGnB,GAAG,CAACoB,WAAW,CAACR,UAAU,CAAC,CAACL,KAAK,CAErD;AACA,KAAM,CAAAc,KAAK,CAAG,CAACd,KAAK,EAAIY,WAAW,CAAG,EAAE,CAAC,EAAI,CAAC,CAAE;AAChD,KAAM,CAAAG,KAAK,CAAGd,MAAM,CAAG,CAAC,CAExB;AACAR,GAAG,CAACuB,QAAQ,CAACX,UAAU,CAAES,KAAK,CAAEC,KAAK,CAAC,CAEtC;AACAtB,GAAG,CAACgB,IAAI,CAAG,GAAGL,mBAAmB,mBAAmB,CAEpD;AACA,KAAM,CAAAa,QAAQ,CAAGH,KAAK,CAAGF,WAAW,CAAG,CAAC,CACxC,KAAM,CAAAM,QAAQ,CAAGH,KAAK,CAAGZ,YAAY,CAAG,GAAG,CAAE;AAE7CV,GAAG,CAACuB,QAAQ,CAACR,WAAW,CAAES,QAAQ,CAAEC,QAAQ,CAAC,CAE7CzB,GAAG,CAAC0B,OAAO,CAAC,CAAC,CACjB,CACJ,CAAC,CAGD,GAAI,CAAAC,IAAI,CAAG,CACPC,QAAQ,CAAE,CACN,CACID,IAAI,CAAE,CAAC9B,QAAQ,CAAE,GAAG,CAAGA,QAAQ,CAAC,CAChCgC,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAC,CACvCC,oBAAoB,CAAE,CAAC,SAAS,CAAE,SAAS,CAAC,CAC5CC,WAAW,CAAE,WACjB,CAAC,CACJ,CACDC,MAAM,CAAE,CAAC,OAAO,CAAE,OAAO,CAC7B,CAAC,CAED,GAAIjC,gBAAgB,CAACE,OAAO,CAAE,CAC1BF,gBAAgB,CAACE,OAAO,CAACgC,OAAO,CAAC,CAAC,CACtC,CAEAlC,gBAAgB,CAACE,OAAO,CAAG,GAAI,CAAAd,KAAK,CAACa,GAAG,CAAE,CACtCkC,IAAI,CAAE,UAAU,CAChBP,IAAI,CAAEA,IAAI,CACVQ,OAAO,CAAE,CACLC,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,IAAI,CACzBC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACLC,OAAO,CAAE,CACLC,OAAO,CAAE,KACb,CAAC,CACDC,MAAM,CAAE,CACJC,OAAO,CAAE,KACb,CACJ,CACJ,CAAC,CACDJ,OAAO,CAAE,CAACpC,gBAAgB,CAC9B,CAAC,CAAC,CAEF,MAAO,IAAM,CACT,GAAIJ,gBAAgB,CAACE,OAAO,CAAE,CAC1BF,gBAAgB,CAACE,OAAO,CAACgC,OAAO,CAAC,CAAC,CACtC,CACJ,CAAC,CACL,CAAC,CAAE,CAACpC,QAAQ,CAAC,CAAC,CAGd,mBACIJ,IAAA,QAAKmD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC5BpD,IAAA,WACIqD,GAAG,CAAEhD,SAAU,CACfS,KAAK,CAAC,KAAK,CACXC,MAAM,CAAC,KAAK,CACP,CAAC,CACT,CAAC,CAEd,CAAC,CAED,cAAe,CAAAb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}