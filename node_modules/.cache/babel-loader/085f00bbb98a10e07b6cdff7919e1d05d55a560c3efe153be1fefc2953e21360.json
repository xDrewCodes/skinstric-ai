{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Code\\\\Desktop\\\\Code\\\\skinstric-ai\\\\client\\\\src\\\\pages\\\\Preparing.jsx\",\n  _s = $RefreshSig$();\nimport { useOutlineAnim } from '../anim';\nimport PrepOutline1 from '../assets/imports/outline.png';\nimport PrepOutline2 from '../assets/imports/outline2.png';\nimport PrepOutline3 from '../assets/imports/outline3.png';\nimport React from 'react';\nimport gsap from 'gsap';\nimport { useGSAP } from '@gsap/react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Preparing = () => {\n  _s();\n  useOutlineAnim();\n  useGSAP(() => {\n    gsap.timeline().from('#preparing', {\n      y: 20,\n      opacity: 0\n    }).from('.outline1', {\n      opacity: 0,\n      duration: 0.9\n    }).from('.outline2', {\n      opacity: 0,\n      duration: 0.9\n    }, '<').from('.outline3', {\n      opacity: 0,\n      duration: 0.9\n    }, '<');\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"preparing\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"outline1\",\n        src: PrepOutline1,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"outline2\",\n        src: PrepOutline2,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"outline3\",\n        src: PrepOutline3,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), \"Preparing Your Analysis...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Preparing, \"TSWWm7H4TIpn4wGYJ0CoHHrah90=\", false, function () {\n  return [useOutlineAnim, useGSAP];\n});\n_c = Preparing;\nexport default Preparing;\nvar _c;\n$RefreshReg$(_c, \"Preparing\");","map":{"version":3,"names":["useOutlineAnim","PrepOutline1","PrepOutline2","PrepOutline3","React","gsap","useGSAP","jsxDEV","_jsxDEV","Fragment","_Fragment","Preparing","_s","timeline","from","y","opacity","duration","children","id","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Code/Desktop/Code/skinstric-ai/client/src/pages/Preparing.jsx"],"sourcesContent":["\r\nimport { useOutlineAnim } from '../anim'\r\nimport PrepOutline1 from '../assets/imports/outline.png'\r\nimport PrepOutline2 from '../assets/imports/outline2.png'\r\nimport PrepOutline3 from '../assets/imports/outline3.png'\r\nimport React from 'react'\r\nimport gsap from 'gsap'\r\nimport { useGSAP } from '@gsap/react'\r\n\r\nconst Preparing = () => {\r\n\r\n    useOutlineAnim()\r\n\r\n    useGSAP(() => {\r\n        gsap.timeline()\r\n        .from('#preparing', { y: 20, opacity: 0 })\r\n        .from('.outline1', { opacity: 0, duration: 0.9 })\r\n        .from('.outline2', { opacity: 0, duration: 0.9 }, '<')\r\n        .from('.outline3', { opacity: 0, duration: 0.9 }, '<')\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <section id=\"preparing\">\r\n                <img className=\"outline1\" src={PrepOutline1} alt=\"\" />\r\n                <img className=\"outline2\" src={PrepOutline2} alt=\"\" />\r\n                <img className=\"outline3\" src={PrepOutline3} alt=\"\" />\r\n                Preparing Your Analysis...\r\n\r\n            </section>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Preparing\r\n"],"mappings":";;AACA,SAASA,cAAc,QAAQ,SAAS;AACxC,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,OAAO,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpBZ,cAAc,CAAC,CAAC;EAEhBM,OAAO,CAAC,MAAM;IACVD,IAAI,CAACQ,QAAQ,CAAC,CAAC,CACdC,IAAI,CAAC,YAAY,EAAE;MAAEC,CAAC,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC,CACzCF,IAAI,CAAC,WAAW,EAAE;MAAEE,OAAO,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAI,CAAC,CAAC,CAChDH,IAAI,CAAC,WAAW,EAAE;MAAEE,OAAO,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAI,CAAC,EAAE,GAAG,CAAC,CACrDH,IAAI,CAAC,WAAW,EAAE;MAAEE,OAAO,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAI,CAAC,EAAE,GAAG,CAAC;EAC1D,CAAC,CAAC;EAEF,oBACIT,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACIV,OAAA;MAASW,EAAE,EAAC,WAAW;MAAAD,QAAA,gBACnBV,OAAA;QAAKY,SAAS,EAAC,UAAU;QAACC,GAAG,EAAEpB,YAAa;QAACqB,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtDlB,OAAA;QAAKY,SAAS,EAAC,UAAU;QAACC,GAAG,EAAEnB,YAAa;QAACoB,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtDlB,OAAA;QAAKY,SAAS,EAAC,UAAU;QAACC,GAAG,EAAElB,YAAa;QAACmB,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,8BAG1D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC,gBAEZ,CAAC;AAEX,CAAC;AAAAd,EAAA,CAxBKD,SAAS;EAAA,QAEXX,cAAc,EAEdM,OAAO;AAAA;AAAAqB,EAAA,GAJLhB,SAAS;AA0Bf,eAAeA,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}