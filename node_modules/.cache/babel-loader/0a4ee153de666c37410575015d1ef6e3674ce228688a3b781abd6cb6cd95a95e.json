{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Code\\\\Desktop\\\\Code\\\\skinstric-ai\\\\src\\\\pages\\\\Preparing.jsx\",\n  _s = $RefreshSig$();\nimport PrepOutline1 from '../assets/imports/outline.png';\nimport PrepOutline2 from '../assets/imports/outline2.png';\nimport PrepOutline3 from '../assets/imports/outline3.png';\nimport React from 'react';\nimport ProceedButton from '../components/ui/ProceedButton';\nimport { useOutlineAnim } from '../anim';\nimport gsap from 'gsap';\nimport { useGSAP } from '@gsap/react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Preparing = () => {\n  _s();\n  useOutlineAnim();\n  let inTl;\n  useGSAP(() => {\n    inTl = gsap.timeline().from('#preparing', {\n      y: 20,\n      opacity: 0\n    }).from('.outline1', {\n      opacity: 0,\n      duration: 1.5\n    }).from('.outline2', {\n      opacity: 0,\n      duration: 1.5\n    }, '<').from('.outline3', {\n      opacity: 0,\n      duration: 1.5\n    }, '<');\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"preparing\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"outline1\",\n        src: PrepOutline1,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"outline2\",\n        src: PrepOutline2,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"outline3\",\n        src: PrepOutline3,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), \"Preparing Your Analysis...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProceedButton, {\n      loc: \"/analysis-menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Preparing, \"TSWWm7H4TIpn4wGYJ0CoHHrah90=\", false, function () {\n  return [useOutlineAnim, useGSAP];\n});\n_c = Preparing;\nexport default Preparing;\nvar _c;\n$RefreshReg$(_c, \"Preparing\");","map":{"version":3,"names":["PrepOutline1","PrepOutline2","PrepOutline3","React","ProceedButton","useOutlineAnim","gsap","useGSAP","jsxDEV","_jsxDEV","Fragment","_Fragment","Preparing","_s","inTl","timeline","from","y","opacity","duration","children","id","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","loc","_c","$RefreshReg$"],"sources":["C:/Users/Code/Desktop/Code/skinstric-ai/src/pages/Preparing.jsx"],"sourcesContent":["\r\nimport PrepOutline1 from '../assets/imports/outline.png'\r\nimport PrepOutline2 from '../assets/imports/outline2.png'\r\nimport PrepOutline3 from '../assets/imports/outline3.png'\r\nimport React from 'react'\r\nimport ProceedButton from '../components/ui/ProceedButton'\r\nimport { useOutlineAnim } from '../anim'\r\nimport gsap from 'gsap'\r\nimport { useGSAP } from '@gsap/react'\r\n\r\nconst Preparing = () => {\r\n\r\n    useOutlineAnim()\r\n    let inTl\r\n\r\n    useGSAP(() => {\r\n        inTl = gsap.timeline()\r\n        .from('#preparing', { y: 20, opacity: 0 })\r\n        .from('.outline1', { opacity: 0, duration: 1.5 })\r\n        .from('.outline2', { opacity: 0, duration: 1.5 }, '<')\r\n        .from('.outline3', { opacity: 0, duration: 1.5 }, '<')\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <section id=\"preparing\">\r\n                <img className=\"outline1\" src={PrepOutline1} alt=\"\" />\r\n                <img className=\"outline2\" src={PrepOutline2} alt=\"\" />\r\n                <img className=\"outline3\" src={PrepOutline3} alt=\"\" />\r\n                Preparing Your Analysis...\r\n\r\n            </section>\r\n\r\n            <ProceedButton loc=\"/analysis-menu\" />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Preparing\r\n"],"mappings":";;AACA,OAAOA,YAAY,MAAM,+BAA+B;AACxD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,cAAc,QAAQ,SAAS;AACxC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,OAAO,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpBR,cAAc,CAAC,CAAC;EAChB,IAAIS,IAAI;EAERP,OAAO,CAAC,MAAM;IACVO,IAAI,GAAGR,IAAI,CAACS,QAAQ,CAAC,CAAC,CACrBC,IAAI,CAAC,YAAY,EAAE;MAAEC,CAAC,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC,CACzCF,IAAI,CAAC,WAAW,EAAE;MAAEE,OAAO,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAI,CAAC,CAAC,CAChDH,IAAI,CAAC,WAAW,EAAE;MAAEE,OAAO,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAI,CAAC,EAAE,GAAG,CAAC,CACrDH,IAAI,CAAC,WAAW,EAAE;MAAEE,OAAO,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAI,CAAC,EAAE,GAAG,CAAC;EAC1D,CAAC,CAAC;EAEF,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAASY,EAAE,EAAC,WAAW;MAAAD,QAAA,gBACnBX,OAAA;QAAKa,SAAS,EAAC,UAAU;QAACC,GAAG,EAAEvB,YAAa;QAACwB,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtDnB,OAAA;QAAKa,SAAS,EAAC,UAAU;QAACC,GAAG,EAAEtB,YAAa;QAACuB,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtDnB,OAAA;QAAKa,SAAS,EAAC,UAAU;QAACC,GAAG,EAAErB,YAAa;QAACsB,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,8BAG1D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAEVnB,OAAA,CAACL,aAAa;MAACyB,GAAG,EAAC;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAExC,CAAC;AAEX,CAAC;AAAAf,EAAA,CA3BKD,SAAS;EAAA,QAEXP,cAAc,EAGdE,OAAO;AAAA;AAAAuB,EAAA,GALLlB,SAAS;AA6Bf,eAAeA,SAAS;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}