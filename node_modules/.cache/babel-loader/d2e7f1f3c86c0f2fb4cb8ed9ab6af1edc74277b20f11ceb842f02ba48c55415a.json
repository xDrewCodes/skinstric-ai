{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Code\\\\Desktop\\\\Code\\\\skinstric-ai\\\\src\\\\pages\\\\Analysis.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AnalysisChoices from '../components/ui/AnalysisChoices';\nimport AnalysisBreakdown from '../components/ui/AnalysisBreakdown';\nimport BackButton from '../components/ui/BackButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analysis = ({\n  demos\n}) => {\n  _s();\n  const [demo, setDemo] = useState('race');\n\n  // let race = Object.values(demos.race)\n  // race = race.sort((a, b) => b - a)\n  // let raceCurrent = race[0]\n\n  // let age = Object.values(demos.age)\n  // age = age.sort((a, b) => b - a)\n  // let ageCurrent = age[0]\n\n  // let gender = Object.values(demos.gender)\n  // gender = gender.sort((a, b) => b - a)\n  // let genderCurrent = gender[0]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: demos\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this)\n  // <section id=\"analysis\">\n  //     <div className=\"section-subhead\">A.I. Analysis\n  //         <div className=\"analysis__title\">Demographics</div>\n  //         <div className=\"analysis__subtitle\">Predicted Race & Age</div>\n  //     </div>\n\n  //     <div className=\"analysis__info\">\n  //         <AnalysisChoices setDemo={setDemo} demo={demo} demos={demos} />\n  //         <div className=\"analysis__info--graphic\">{demos[demo]}\n  //             <div className=\"analysis__info--graphic--chart\">\n  //                 100%\n  //             </div>\n  //         </div>\n  //         <AnalysisBreakdown demo={demo} demos={demos} />\n  //     </div>\n\n  //     <BackButton loc=\"/analysis-menu\" />\n\n  //     <div className=\"analysis__ai-imperfect\">If A.I. estimate is wrong, select the correct one.</div>\n  //     <div className=\"analysis__buttons\">\n  //         <button className=\"analysis__buttons--reset\">Reset</button>\n  //         <button className=\"analysis__buttons--confirm\">Confirm</button>\n  //     </div>\n  // </section>\n  ;\n};\n_s(Analysis, \"IpsR2pofHLX+2QKWA+6KxSYdzAw=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useEffect","useState","AnalysisChoices","AnalysisBreakdown","BackButton","jsxDEV","_jsxDEV","Analysis","demos","_s","demo","setDemo","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Code/Desktop/Code/skinstric-ai/src/pages/Analysis.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react'\r\nimport AnalysisChoices from '../components/ui/AnalysisChoices'\r\nimport AnalysisBreakdown from '../components/ui/AnalysisBreakdown'\r\nimport BackButton from '../components/ui/BackButton'\r\n\r\nconst Analysis = ({ demos }) => {\r\n\r\n    const [demo, setDemo] = useState('race')\r\n\r\n    // let race = Object.values(demos.race)\r\n    // race = race.sort((a, b) => b - a)\r\n    // let raceCurrent = race[0]\r\n\r\n    // let age = Object.values(demos.age)\r\n    // age = age.sort((a, b) => b - a)\r\n    // let ageCurrent = age[0]\r\n\r\n    // let gender = Object.values(demos.gender)\r\n    // gender = gender.sort((a, b) => b - a)\r\n    // let genderCurrent = gender[0]\r\n\r\n\r\n    return (\r\n        <div>{demos}</div>\r\n        // <section id=\"analysis\">\r\n        //     <div className=\"section-subhead\">A.I. Analysis\r\n        //         <div className=\"analysis__title\">Demographics</div>\r\n        //         <div className=\"analysis__subtitle\">Predicted Race & Age</div>\r\n        //     </div>\r\n\r\n        //     <div className=\"analysis__info\">\r\n        //         <AnalysisChoices setDemo={setDemo} demo={demo} demos={demos} />\r\n        //         <div className=\"analysis__info--graphic\">{demos[demo]}\r\n        //             <div className=\"analysis__info--graphic--chart\">\r\n        //                 100%\r\n        //             </div>\r\n        //         </div>\r\n        //         <AnalysisBreakdown demo={demo} demos={demos} />\r\n        //     </div>\r\n\r\n        //     <BackButton loc=\"/analysis-menu\" />\r\n\r\n        //     <div className=\"analysis__ai-imperfect\">If A.I. estimate is wrong, select the correct one.</div>\r\n        //     <div className=\"analysis__buttons\">\r\n        //         <button className=\"analysis__buttons--reset\">Reset</button>\r\n        //         <button className=\"analysis__buttons--confirm\">Confirm</button>\r\n        //     </div>\r\n        // </section>\r\n    )\r\n}\r\n\r\nexport default Analysis\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,kCAAkC;AAC9D,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,OAAOC,UAAU,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAE5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;;EAExC;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAGA,oBACIK,OAAA;IAAAM,QAAA,EAAMJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM;EACjB;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER,CAAC;AAAAP,EAAA,CA5CKF,QAAQ;AAAAU,EAAA,GAARV,QAAQ;AA8Cd,eAAeA,QAAQ;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}